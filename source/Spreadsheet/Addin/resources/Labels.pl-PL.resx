<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="translation.odf2oox.HeaderFooterCharNumber" xml:space="preserve">
    <value>Program Excel obsługuje tylko 256 znaków w łańcuchach nagłówka/stopki (wraz z formatowaniem). Wszystkie znaki powyżej 256 zostaną utracone.</value>
  </data>
  <data name="translation.odf2oox.RemovedFilter" xml:space="preserve">
    <value>Niektóre filtry danych muszą zostać usunięte, ponieważ program Excel ich nie obsługuje.</value>
  </data>
  <data name="translation.odf2oox.ScenarioNumber" xml:space="preserve">
    <value>Za dużo komórek scenariusza. Program Excel obsługuje tylko 32 komórki scenariusza.</value>
  </data>
  <data name="translation.odf2oox.LineChartSmoothingBSpline" xml:space="preserve">
    <value>Program Excel nie obsługuje kolorów ramek dla scenariuszy.</value>
  </data>
  <data name="translation.oox2odf.RemovedFilter" xml:space="preserve">
    <value>Niektóre filtry danych muszą zostać usunięte, ponieważ program Calc ich nie obsługuje</value>
  </data>
  <data name="translation.oox2odf.ColNumber" xml:space="preserve">
    <value>Program Open Office Calc obsługuje kolumny tylko do IV. Wszelkie kolumny ponad IV zostaną trwale utracone.permanently</value>
  </data>
  <data name="translation.oox2odf.RowNumber" xml:space="preserve">
    <value>Program Open Office Calc obsługuje tylko 65536 wierszy. Wszelkie wiersze ponad 65536 zostaną trwale utracone.</value>
  </data>
  <data name="translation.oox2odf.SheetNumber" xml:space="preserve">
    <value>Program Open Office Calc obsługuje tylko 256 arkuszy. Wszelkie arkusze ponad 256 zostaną trwale utracone.permanently</value>
  </data>
  <data name="translation.oox2odf.OLEObject" xml:space="preserve">
    <value>Program Open Office Calc obsługuje tylko obiekt OLEObject zaimplementowany jako odsyłacz do pliku.</value>
  </data>
  <data name="translation.oox2odf.DataConsolidation" xml:space="preserve">
    <value>Nie można przekształcić konsolidacji danych.</value>
  </data>
  <data name="translation.odf2oox.DataValidCellRange" xml:space="preserve">
    <value>Program Excel nie obsługuje kryteriów zakresu komórek podczas sprawdzania poprawności danych.</value>
  </data>
  <data name="translation.odf2oox.DataValidErrorMacro" xml:space="preserve">
    <value>Program Excel nie obsługuje alertów błędów makr podczas sprawdzania poprawności danych.</value>
  </data>
  <data name="translation.odf2oox.QuarterDateFormat" xml:space="preserve">
    <value>Program Excel nie obsługuje kwartalnego formatu daty. Format daty zostanie zmieniony na format roczny.</value>
  </data>
  <data name="translation.odf2oox.SheetNameLength" xml:space="preserve">
    <value>Program Excel nie zezwala na nazwy arkuszy mające więcej niż 31 znaków. Zostaną utracone znaki zabronione *\/[]:";? i znaki powyżej 31.</value>
  </data>
  <data name="translation.oox2odf.ManualColBreakeInsideHeader" xml:space="preserve">
    <value>W kolumnach nagłówka do powtórzenia istnieje więcej niż jeden ręczny podział kolumny. Widoczna będzie tylko jedna.</value>
  </data>
  <data name="translation.odf2oox.draggedImagePath" xml:space="preserve">
    <value>Obrazy wstawiane do pliku ODS metodą przeciągnij i upuść mają ścieżkę względną. Z tego powodu zostaną utracone podczas konwersji do formatu XLSX.</value>
  </data>
  <data name="translation.odf2oox.hyperlinkTextbox" xml:space="preserve">
    <value>Można dodawać hiperłącza do oddzielnych słów zawartych w polu tekstowym w pliku ODS, jednak po konwersji do formatu XLSX będą się one odnosiły do całego pola tekstowego.</value>
  </data>
  <data name="translation.odf2oox.imageFromOtherApplication" xml:space="preserve">
    <value>Dane lub obrazy skopiowane i wklejone z innych aplikacji zostaną utracone i nie będą konwertowane.</value>
  </data>
</root>